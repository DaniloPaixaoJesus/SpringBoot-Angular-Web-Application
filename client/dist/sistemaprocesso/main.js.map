{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/custom-toolbar/custom.toolbar.component.css","webpack:///./src/app/components/custom-toolbar/custom.toolbar.component.html","webpack:///./src/app/components/custom-toolbar/custom.toolbar.component.ts","webpack:///./src/app/components/imageviewer/imageviewer.component.html","webpack:///./src/app/components/imageviewer/imageviewer.component.scss","webpack:///./src/app/components/imageviewer/imageviewer.component.ts","webpack:///./src/app/components/legal.advice/form.legal.advice/form.legal.advice.component.html","webpack:///./src/app/components/legal.advice/form.legal.advice/form.legal.advice.component.scss","webpack:///./src/app/components/legal.advice/form.legal.advice/form.legal.advice.component.ts","webpack:///./src/app/components/legal.advice/search.legal.advice/search.legal.advice.component.html","webpack:///./src/app/components/legal.advice/search.legal.advice/search.legal.advice.component.scss","webpack:///./src/app/components/legal.advice/search.legal.advice/search.legal.advice.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/process/form.process/form.process.component.html","webpack:///./src/app/components/process/form.process/form.process.component.scss","webpack:///./src/app/components/process/form.process/form.process.component.ts","webpack:///./src/app/components/process/search.process/search.process.component.html","webpack:///./src/app/components/process/search.process/search.process.component.scss","webpack:///./src/app/components/process/search.process/search.process.component.ts","webpack:///./src/app/components/user/form.user/form.user.component.html","webpack:///./src/app/components/user/form.user/form.user.component.scss","webpack:///./src/app/components/user/form.user/form.user.component.ts","webpack:///./src/app/components/user/search.user/search.user.component.html","webpack:///./src/app/components/user/search.user/search.user.component.scss","webpack:///./src/app/components/user/search.user/search.user.component.ts","webpack:///./src/app/services/legal.advice/legal.advice.model.ts","webpack:///./src/app/services/legal.advice/legal.advice.service.ts","webpack:///./src/app/services/process/process.model.ts","webpack:///./src/app/services/process/process.service.ts","webpack:///./src/app/services/user/user.model.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/app/shared/env-config.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAGiC;AACN;AACkB;AACN;AACyB;AACN;AAEjH,IAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,EAAE;QACR,4BAA4B;QAC3B,SAAS,EAAE,kHAAsB;KACnC;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,sGAAmB;KAC/B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gGAAiB;KAC7B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,gGAAiB;KAC7B;IAED;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,kHAAsB;KAClC;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,4GAAoB;KAChC;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,4GAAoB;KAChC;IAED;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,qIAA0B;KACtC;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,+HAAwB;KACpC;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,+HAAwB;KACpC;CACF,CAAC;AAcF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAZ5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAClB,SAAS,CACV;aACF;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,SAAS,EAAE,EAAE;SACd,CAAC;OAEW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrE7B,8PAA8P,yMAAyM,mNAAmN,qrBAAqrB,gQAAgQ,4QAA4Q,gQ;;;;;;;;;;;ACA31D,2EAA2E,iBAAiB,EAAE,iBAAiB,iBAAiB,EAAE,OAAO,0BAA0B,iBAAiB,EAAE,wBAAwB,qBAAqB,EAAE,uBAAuB,qBAAqB,eAAe,cAAc,oBAAoB,EAAE,WAAW,0BAA0B,iBAAiB,mBAAmB,uBAAuB,uBAAuB,2BAA2B,eAAe,EAAE,YAAY,0BAA0B,sBAAsB,cAAc,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACGzhB;AACmE;AAErG,IAAM,gBAAgB,GAC7B,mEAAO,CAAC,kBAAkB,EAAE;IACtB,sEAAU,CAAC,SAAS,EAAE;QACpB,6BAA6B;QAC7B,iEAAK,CAAC,QAAQ,EACZ,iEAAK,CAAC;YACJ,QAAQ,EAAE,OAAO;YACjB,KAAK,EAAC,MAAM;YACZ,SAAS,EAAE,kBAAkB;YAC7B,OAAO,EAAE,CAAC;SACX,CAAC,EACF,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAClB,sCAAsC;QACtC,iEAAK,CAAC,QAAQ,EACZ,mEAAO,CAAC,gBAAgB,EACtB,iEAAK,CAAC;YACJ,QAAQ,EAAE,OAAO;YACjB,KAAK,EAAC,MAAM;YACZ,SAAS,EAAE,mBAAmB;YAC9B,OAAO,EAAE,CAAC;SACX,CAAC,CACH,EACH,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAEhB,yCAAyC;QACzC,iEAAK,CAAC,QAAQ,EACZ,mEAAO,CAAC,eAAe,EACrB,iEAAK,CAAC;YACJ,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,gBAAgB;SAC5B,CAAC,CACH,EACH,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;KAEnB,CAAC;CACL,CAAC;AAQF;IAME;QALA,UAAK,GAAG,QAAQ;QAChB,YAAO,GAAG,KAAK;IAKX,CAAC;IAEL,+BAAQ,GAAR;IAEA,CAAC;IAED,6BAAM,GAAN;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,+BAAQ,GAAR,UAAS,MAAM;QACb,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACzC,CAAC;IACD,kCAAW,GAAX;QACE,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE;IACvC,CAAC;IAtBU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,UAAU,EAAE,CAAE,gBAAgB,CAAE;SACjC,CAAC;;OACW,YAAY,CAwBxB;IAAD,mBAAC;CAAA;AAxBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDzB,eAAe;AACyC;AACE;AACS;AACQ;AACvB;AAC2B;AAE/E,yBAAyB;AAC6D;AACvB;AAE+B;AAE9F,cAAc;AAsBa;AAE2B;AAEtD,QAAQ;AACgD;AAExD,aAAa;AACiC;AACoB;AACsB;AACJ;AAEgB;AACJ;AAEuB;AACJ;AAwDnH;IAAA;IAAyB,CAAC;IAAb,SAAS;QArDrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,iFAAc;gBACd,uGAAmB;gBACnB,iGAAiB;gBACjB,mHAAsB;gBACtB,6GAAoB;gBACpB,sIAA0B;gBAC1B,gIAAwB;gBACxB,kGAAoB;gBACpB,0GAAsB;aACvB;YACD,OAAO,EAAE;gBACP,SAAS;gBACT,qEAAgB;gBAChB,uEAAa;gBACb,4FAAuB;gBACvB,iEAAc;gBACd,0DAAW;gBACX,kEAAmB;gBACnB,aAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,iEAAe;gBACf,+DAAa;gBACb,kEAAgB;gBAChB,gEAAc;gBACd,sEAAoB;gBACpB,0EAAwB;gBACxB,mEAAiB;gBACjB,oEAAkB;gBAClB,uEAAqB;gBACrB,iEAAe;gBACf,+DAAa;gBACb,kEAAgB;gBAChB,kEAAgB;gBAChB,gEAAc;gBACd,iEAAe;gBACf,sEAAgB;gBAChB,aAAa;gBAEb,iBAAiB;gBACjB,4EAAiB;gBAEjB,qEAAgB,CAAC,QAAQ;aAC1B;YACD,SAAS,EAAE;gBACT,4DAAY;aACb;SACF,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7GtB,2EAA2E,mBAAmB,KAAK,qBAAqB,mBAAmB,KAAK,WAAW,4BAA4B,mBAAmB,KAAK,8BAA8B,uBAAuB,KAAK,2BAA2B,uBAAuB,iBAAiB,gBAAgB,sBAAsB,KAAK,eAAe,4BAA4B,mBAAmB,qBAAqB,yBAAyB,yBAAyB,6BAA6B,iBAAiB,KAAK,gBAAgB,4BAA4B,wBAAwB,gBAAgB,iBAAiB,KAAK,C;;;;;;;;;;;ACAzpB,6LAA6L,mLAAmL,snBAAsnB,+MAA+M,oO;;;;;;;;;;;;;;;;;;;;;;;;;ACAnoC;AACiB;AAOnE;IAEE,gCACU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IACtB,CAAC;IAEH,8CAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IARU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAIkB,sDAAM;OAHb,sBAAsB,CAUlC;IAAD,6BAAC;CAAA;AAVkC;;;;;;;;;;;;ACRnC,8JAA8J,UAAU,gH;;;;;;;;;;;ACAxK,yBAAyB,kBAAkB,2BAA2B,iBAAiB,EAAE,QAAQ,sBAAsB,wBAAwB,EAAE,mBAAmB,YAAY,2BAA2B,qBAAqB,oCAAoC,mCAAmC,+BAA+B,oCAAoC,oCAAoC,gCAAgC,EAAE,+CAA+C,qBAAqB,sCAAsC,sCAAsC,kCAAkC,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAzf;AAC1B;AAEnF,IAAM,yBAAyB,GAAsB;IACnD,KAAK,EAAE,GAAG;IACV,MAAM,EAAE,GAAG;IACX,OAAO,EAAE,SAAS;IAClB,WAAW,EAAE;QACb,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;QACpB,WAAW,EAAE,SAAS;QACtB,WAAW,EAAE,CAAC,CAAC,wCAAwC;KACxD;CACA;AAaD;IAXA;QAcU,eAAU,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;IAyBjD,CAAC;IApBC,sBAAI,2CAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;;;OAAA;IAED,8CAAe,GAAf;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAGD,uCAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEO,8CAAe,GAAvB;QAAA,iBAMC;QALC,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1F,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,WAAW,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnG,IAAM,QAAM,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,WAAW,GAAG,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC;YAC1E,UAAU,CAAC,cAAM,YAAI,CAAC,UAAU,GAAG,QAAM,EAAxB,CAAwB,EAAE,CAAC,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;IA1B0B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAU,wDAAU;yDAAC;IAK/C;QADC,2DAAK,EAAE;;wDACM;IAWd;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;wDAGzC;IAnBU,oBAAoB;QAXhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;YAG3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,6EAAkB;oBAC3B,QAAQ,EAAE,yBAAyB;iBACpC;aACF;SACF,CAAC;OACW,oBAAoB,CA4BhC;IAAD,2BAAC;CAAA;AA5BgC;;;;;;;;;;;;AC1BjC,sOAAsO,8UAA8U,yBAAyB,6kBAA6kB,QAAQ,+2B;;;;;;;;;;;ACAlqC,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AAEgC;AACT;AAEd;AAQlE;IAEE,kCACU,KAAqB,EACrB,MAAc,EACd,kBAAsC,EACtC,WAAwB;QAHxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,gBAAW,GAAX,WAAW,CAAa;QAIlC,gBAAW,GAAgB,IAAI,qFAAW,EAAE,CAAC;IAHzC,CAAC;IAOL,2CAAQ,GAAR;QAAA,iBAwBC;QAtBC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAM;YAClC,EAAE,EAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;gBACnB,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC7C,KAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CACtE,WAAC;oBACC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,CAAC;oBACnC,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACvB,CAAC,CACF;YACH,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,WAAW,GAAG,IAAI,qFAAW,EAAE,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC3B,SAAS,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;YACxC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACrB,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAI,GAAJ;QACE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAC;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAED,kDAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAiB,IAAI,CAAC,WAAW,CAAC,SAAW,CAAC,CAAC;IACvE,CAAC;IAED,gDAAa,GAAb;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,OAAO,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACnE,WAAC;YACC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAa,GAAb;QAAA,iBAQC;QAPC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACvF,WAAC;YACC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAM,GAAN;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IA3EU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAIiB,8DAAc;YACb,sDAAM;YACM,8FAAkB;YACzB,uEAAW;OANvB,wBAAwB,CA6EpC;IAAD,+BAAC;CAAA;AA7EoC;;;;;;;;;;;;ACdrC,2QAA2Q,SAAS,yRAAyR,eAAe,4PAA4P,sBAAsB,qFAAqF,eAAe,2GAA2G,4BAA4B,oL;;;;;;;;;;;ACAzjC,8BAA8B,kBAAkB,wBAAwB,EAAE,oFAAoF,4CAA4C,mBAAmB,4BAA4B,EAAE,mBAAmB,uBAAuB,EAAE,0BAA0B,iCAAiC,EAAE,+BAA+B,mBAAmB,qCAAqC,EAAE,0BAA0B,+BAA+B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtc;AACiB;AACsB;AAQzF;IAYE,oCACU,kBAAsC,EACtC,MAAc;QADd,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QAVxB,uCAAuC;QACvC,YAAO,GAAY,KAAK,CAAC;QAGzB,6BAA6B;QAC7B,kBAAa,GAAY,KAAK,CAAC;QAC/B,UAAK,GAAW,CAAC,CAAC;IAKd,CAAC;IAEL,yDAAoB,GAApB,UAAqB,EAAE;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAqB,EAAI,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,4DAAuB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,yCAAI,GAAJ;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE;aACzC,SAAS,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;YAChD,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;YAC1D,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,iDAAuC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IA1CU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;;;SAG9C,CAAC;yCAc8B,8FAAkB;YAC9B,sDAAM;OAdb,0BAA0B,CA2CtC;IAAD,iCAAC;CAAA;AA3CsC;;;;;;;;;;;;ACVvC,mB;;;;;;;;;;;ACAA,yzBAAyzB,cAAc,8V;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCrxB;AACiB;AAQnE;IAME,wBACU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,8BAAK,GAAL;QACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,0CAAiB,GAAjB;QACE,IAAM,KAAK,GAAG;YACN,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE;YACtD,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE;YACzD,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE;YACvD,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE;YACtD,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE;SACzD,CAAC;QAER,IAAM,SAAS,GAAG,KAAK;aACR,MAAM,CAAC,UAAC,UAAU,EAAE,KAAK;YACtB,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAC1D,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrC,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC,EACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CACpB,CAAC;QAEhB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IAED,2CAAkB,GAAlB;QACE,IAAM,KAAK,GAAG;YACZ,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,eAAe,EAAE,EAAC,EAAE,EAAE,SAAS,EAAC,EAAE,iBAAiB,EAAE,SAAS,EAAE;YACzF,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,eAAe,EAAE,EAAC,EAAE,EAAE,SAAS,EAAC,EAAE,iBAAiB,EAAE,SAAS,EAAE;YACzF,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,eAAe,EAAE,EAAC,EAAE,EAAE,SAAS,EAAC,EAAE,iBAAiB,EAAE,SAAS,EAAE;YACzF,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,eAAe,EAAE,EAAC,EAAE,EAAE,SAAS,EAAC,EAAE,iBAAiB,EAAE,SAAS,EAAE;SAC1F,CAAC;QAEF,IAAM,SAAS,GAAG,KAAK;aAChB,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,eAAe,CAAC,EAAE,EAApB,CAAoB,CAAC;aACjC,MAAM,CAAE,UAAC,MAAM,EAAE,IAAI;YACZ,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,iBAAiB,KAAK,IAAI,CAAC,iBAAiB,EAA/C,CAA+C,CAAC,CAAC;YAEnF,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,OAAO,CAAC,gBAAgB,CAAC,IAAI,YAAG,MAAM,EAAE,IAAI,CAAC,EAAE,IAAK,IAAI,CAAC,eAAe,EAAG,CAAC;YAC9E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC;oBACV,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;oBACzC,gBAAgB,EAAE,YAAG,MAAM,EAAE,IAAI,CAAC,EAAE,IAAK,IAAI,CAAC,eAAe,EAAG;iBACjE,CAAC,CAAC;YACL,CAAC;YAED,MAAM,CAAC,MAAM,CAAC;QACpB,CAAC,EACC,EAAE,CACL,CAAC;QACV,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IAhEU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAQkB,sDAAM;OAPb,cAAc,CAkE1B;IAAD,qBAAC;CAAA;AAlE0B;;;;;;;;;;;;ACV3B,sOAAsO,4qCAA4qC,uBAAuB,8OAA8O,sBAAsB,+DAA+D,4BAA4B,8lBAA8lB,QAAQ,opC;;;;;;;;;;;ACA92E,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AAEkB;AACT;AACc;AAEd;AAQlE;IAEE,8BACU,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,WAAwB;QAHxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QAIlC,YAAO,GAAY,IAAI,uEAAO,EAAE,CAAC;QACjC,gBAAW,GAAgB,IAAI,qFAAW,EAAE,CAAC;QAC7C,oBAAe,GAAkB,IAAI,KAAK,EAAe,CAAC;IALtD,CAAC;IASL,uCAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAM;YAClC,EAAE,EAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;gBACnB,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACzC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAC1D,WAAC;oBACC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,CAAC;oBACnC,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,KAAI,CAAC,eAAe,GAAG,CAAC,CAAC,YAAY,CAAC;gBACxC,CAAC,CACF;YACH,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,OAAO,GAAG,IAAI,uEAAO,EAAE,CAAC;YAC/B,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC3B,SAAS,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;YACxC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACrB,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,QAAQ,GAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAG,QAAC,CAAC,EAAE,IAAI,KAAI,CAAC,WAAW,CAAC,gBAAgB,EAAzC,CAAyC,CAAC,CAAC;QACnF,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,mBAAmB,GAAG,QAAQ,CAAC,KAAK,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,QAAQ,CAAC,IAAI,CAAC;QACpD,IAAI,kBAAkB,GAAkB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,OAAO,CAAC;QACvC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,GAAG,kBAAkB,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,qFAAW,EAAE,CAAC;IACvC,CAAC;IAED,mCAAI,GAAJ;QACE,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAC;YAClB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAED,kDAAmB,GAAnB,UAAoB,EAAE;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAqB,EAAI,CAAC,CAAC;IACnD,CAAC;IAED,4CAAa,GAAb;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACvD,WAAC;YACC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAa,GAAb;QAAA,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACvE,WAAC;YACC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAM,GAAN;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IA1FU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAIiB,8DAAc;YACb,sDAAM;YACE,gFAAc;YACjB,uEAAW;OANvB,oBAAoB,CA4FhC;IAAD,2BAAC;CAAA;AA5FgC;;;;;;;;;;;;ACfjC,weAAwe,SAAS,iTAAiT,QAAQ,OAAO,WAAW,0I;;;;;;;;;;;ACA5zB,8BAA8B,kBAAkB,wBAAwB,EAAE,oFAAoF,4CAA4C,mBAAmB,4BAA4B,EAAE,mBAAmB,uBAAuB,EAAE,0BAA0B,iCAAiC,EAAE,+BAA+B,mBAAmB,qCAAqC,EAAE,0BAA0B,+BAA+B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtc;AACiB;AACQ;AAQ3E;IAYE,gCACU,cAA8B,EAC9B,MAAc;QADd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAVxB,uCAAuC;QACvC,YAAO,GAAY,KAAK,CAAC;QAGzB,6BAA6B;QAC7B,kBAAa,GAAY,KAAK,CAAC;QAC/B,UAAK,GAAW,CAAC,CAAC;IAKd,CAAC;IAEL,iDAAgB,GAAhB,UAAiB,EAAE;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAiB,EAAI,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,oDAAmB,GAAnB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,qCAAI,GAAJ;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aAClC,SAAS,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;YAC5C,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,mCAAmC;QACvC,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACtD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,6CAAmC,CAAC;QACnD,CAAC,CAAC,CAAC;IAEL,CAAC;IA5CU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;yCAc0B,gFAAc;YACtB,sDAAM;OAdb,sBAAsB,CA6ClC;IAAD,6BAAC;CAAA;AA7CkC;;;;;;;;;;;;ACVnC,sOAAsO,20D;;;;;;;;;;;ACAtO,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AAES;AACV;AAOxD;IAEE,2BACU,KAAqB,EACrB,MAAc,EACd,WAAwB;QAFxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAIlC,SAAI,GAAS,IAAI,8DAAI,EAAE,CAAC;IAHpB,CAAC;IAKL,oCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAM;YAClC,EAAE,EAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;gBACnB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACtC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACjD,WAAC;oBACG,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBAClB,CAAC,CACF;YACH,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,IAAI,GAAG,IAAI,8DAAI,EAAE,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAI,GAAJ;QACE,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC;YACf,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;IACH,CAAC;IAED,sCAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC9C,WAAC;YACC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3D,WAAC;YACC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAM,GAAN;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAxDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAIiB,8DAAc;YACb,sDAAM;YACD,uEAAW;OALvB,iBAAiB,CA0D7B;IAAD,wBAAC;CAAA;AA1D6B;;;;;;;;;;;;ACX9B,seAAse,SAAS,2SAA2S,SAAS,KAAK,QAAQ,KAAK,WAAW,yI;;;;;;;;;;;ACAh0B,8BAA8B,kBAAkB,wBAAwB,EAAE,oFAAoF,4CAA4C,mBAAmB,4BAA4B,EAAE,mBAAmB,uBAAuB,EAAE,0BAA0B,iCAAiC,EAAE,+BAA+B,mBAAmB,qCAAqC,EAAE,0BAA0B,+BAA+B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtc;AACiB;AACD;AAQlE;IAYE,6BACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAVxB,uCAAuC;QACvC,YAAO,GAAY,KAAK,CAAC;QAGzB,6BAA6B;QAC7B,kBAAa,GAAY,KAAK,CAAC;QAC/B,UAAK,GAAW,CAAC,CAAC;IAKd,CAAC;IAEL,2CAAa,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,EAAI,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,kCAAI,GAAJ;QACE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC3B,SAAS,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;YACxC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,mCAAmC;QACvC,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YAClD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,eAAe,CAAC;QAC/B,CAAC,CAAC,CAAC;IAEL,CAAC;IA5CU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;;;SAGtC,CAAC;yCAcuB,uEAAW;YAChB,sDAAM;OAdb,mBAAmB,CA6C/B;IAAD,0BAAC;CAAA;AA7C+B;;;;;;;;;;;;;;ACVhC;AAAA;IAAA;IAYA,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ0C;AACO;AAGL;AAE7C,IAAM,GAAG,GAAM,0DAAO,CAAC,GAAG,CAAC,GAAG,yBAAsB;AAKpD;IAEE,4BACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEL,+CAAkB,GAAlB;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,KAAG,GAAK,CAAC,CAAC;IAChD,CAAC;IAED,+CAAkB,GAAlB,UAAmB,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,GAAG,SAAI,EAAI,CAAC,CAAC;IACpD,CAAC;IAED,8CAAiB,GAAjB,UAAkB,WAAW;QAC3B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,GAAK,EAAE,WAAW,CAAC,CAAC;IAC/C,CAAC;IAED,8CAAiB,GAAjB,UAAkB,EAAE,EAAE,WAAW;QAC/B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAK,GAAG,SAAI,EAAI,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,GAAG,SAAI,EAAI,EAAE,WAAW,CAAC,CAAC;IACrD,CAAC;IA1BU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;OAHf,kBAAkB,CA4B9B;IAAD,yBAAC;CAAA;AA5B8B;;;;;;;;;;;;;;ACV/B;AAAA;IAAA;IAUA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX0C;AACO;AAGL;AAE7C,IAAM,GAAG,GAAM,0DAAO,CAAC,GAAG,CAAC,GAAG,sBAAmB;AAKjD;IAEE,wBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEL,wCAAe,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,KAAG,GAAK,CAAC,CAAC;IAC5C,CAAC;IAED,uCAAc,GAAd,UAAe,EAAE;QACf,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,SAAI,EAAI,CAAC,CAAC;IAChD,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,GAAK,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,sCAAa,GAAb,UAAc,EAAE,EAAE,OAAO;QACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAK,GAAG,SAAI,EAAI,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,GAAG,SAAI,EAAI,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IA1BU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;OAHf,cAAc,CA4B1B;IAAD,qBAAC;CAAA;AA5B0B;;;;;;;;;;;;;;ACX3B;AAAA;IAAA;IAOA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP0C;AACO;AAChB;AAEW;AAE7C,IAAM,GAAG,GAAM,0DAAO,CAAC,GAAG,CAAC,GAAG,kBAAe;AAK7C;IAEE,qBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEL,iCAAW,GAAX;QACE,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,KAAG,GAAK,CAAC,CAAC;IACzC,CAAC;IAED,iCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,SAAI,EAAI,CAAC,CAAC;IAC7C,CAAC;IAED,gCAAU,GAAV,UAAW,IAAI;QACb,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,GAAK,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE,EAAE,IAAI;QACjB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAK,GAAG,SAAI,EAAI,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,GAAG,SAAI,EAAI,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,kCAAY,GAAZ;QACE,IAAI,WAAW,GAAG;YAChB,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,EAAC;YAC9D,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,EAAC;YAC9D,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,EAAC;SAC/D;QACD,MAAM,CAAC,+CAAU,CAAC,MAAM,CAAC,kBAAQ;YAC1B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;YAC1B,QAAQ,CAAC,QAAQ,EAAE;QAC1B,CAAC,CAAC;IACJ,CAAC;IAtCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;OAHf,WAAW,CAuCvB;IAAD,kBAAC;CAAA;AAvCuB;;;;;;;;;;;;;;;ACVqC;AAE7D,+DAAe;IACX,GAAG,EAAE;QACD,GAAG,EAAE,qEAAW,CAAC,MAAM;KAC1B;CACJ,EAAC;;;;;;;;;;;;;;;ACNK,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,uBAAuB;CAChC,CAAC;;;;;;;;;;;;;;;;;;;;ACJ6C;AAC4B;AAE9B;AACY;AAEvC;AAElB,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport {SearchUserComponent} from './components/user/search.user/search.user.component';\nimport {FormUserComponent} from './components/user/form.user/form.user.component';\nimport {SearchProcessComponent} from './components/process/search.process/search.process.component';\nimport {FormProcessComponent} from './components/process/form.process/form.process.component';\nimport {SearchLegalAdviceComponent} from './components/legal.advice/search.legal.advice/search.legal.advice.component';\nimport {FormLegalAdviceComponent} from './components/legal.advice/form.legal.advice/form.legal.advice.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    // component: LoginComponent\n     component: SearchProcessComponent\n  },\n  {\n    path: 'user',\n    component: SearchUserComponent\n  },\n  {\n    path: 'user/form',\n    component: FormUserComponent\n  },\n  {\n    path: 'user/form/:id',\n    component: FormUserComponent\n  },\n\n  {\n    path: 'process',\n    component: SearchProcessComponent\n  },\n  {\n    path: 'process/form',\n    component: FormProcessComponent\n  },\n  {\n    path: 'process/form/:id',\n    component: FormProcessComponent\n  },\n\n  {\n    path: 'legalAdvice',\n    component: SearchLegalAdviceComponent\n  },\n  {\n    path: 'legalAdvice/form',\n    component: FormLegalAdviceComponent\n  },\n  {\n    path: 'legalAdvice/form/:id',\n    component: FormLegalAdviceComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes\n    )\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: []\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"<mat-sidenav-container>\\n  <mat-sidenav  #sidenav role=\\\"navigation\\\">\\n   <mat-nav-list>\\n    <a mat-list-item\\n        routerLink=\\\"/user\\\" (click)=\\\"sidenav.close()\\\">\\n      <mat-icon class=\\\"icon\\\">person</mat-icon>  \\n      &nbsp;<span class=\\\"label\\\">Usuário</span>\\n    </a>\\n    <a mat-list-item\\n      routerLink=\\\"/process\\\" (click)=\\\"sidenav.close()\\\">\\n      <mat-icon class=\\\"icon\\\">library_books</mat-icon>  \\n      &nbsp;<span class=\\\"label\\\">Processo</span>\\n    </a>\\n    <a mat-list-item\\n      routerLink=\\\"/legalAdvice\\\" (click)=\\\"sidenav.close()\\\">\\n      <mat-icon class=\\\"icon\\\">playlist_add_check</mat-icon>  \\n      &nbsp;<span class=\\\"label\\\">Parecer</span>\\n    </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n     <div fxHide.gt-xs>\\n       <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n    </div>\\n     <div>\\n       <a routerLink=\\\"/\\\">\\n          Sistema de Processos\\n       </a>\\n     </div>\\n     <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\n        <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n            <li>\\n              <a\\n                routerLink=\\\"/\\\">\\n                  <mat-icon class=\\\"icon\\\">person</mat-icon>\\n                  &nbsp;<span class=\\\"label\\\">Usuário</span>\\n              </a>\\n            </li>\\n            <li>\\n                <a\\n                  routerLink=\\\"/process\\\">\\n                    <mat-icon class=\\\"icon\\\">library_books</mat-icon>\\n                    &nbsp;<span class=\\\"label\\\">Processo</span>\\n                </a>\\n            </li>\\n            <li>\\n                <a\\n                  routerLink=\\\"/legalAdvice\\\">\\n                    <mat-icon class=\\\"icon\\\">playlist_add_check</mat-icon>\\n                    &nbsp;<span class=\\\"label\\\">Parecer</span>\\n                </a>\\n            </li>\\n        </ul>\\n     </div>\\n    </mat-toolbar>\\n    <main>\\n      <router-outlet #o=\\\"outlet\\\"></router-outlet>\\n    </main>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n  height: 100%; }\\n\\nmat-sidenav {\\n  width: 250px; }\\n\\na {\\n  text-decoration: none;\\n  color: white; }\\n\\na:hover,\\na:active {\\n  color: lightgray; }\\n\\n.navigation-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  cursor: pointer; }\\n\\n.icon {\\n  display: inline-block;\\n  height: 30px;\\n  margin: 0 auto;\\n  padding-right: 5px;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 15%; }\\n\\n.label {\\n  display: inline-block;\\n  line-height: 30px;\\n  margin: 0;\\n  width: 85%; }\\n\"","\nimport { Subscription } from 'rxjs'\n\nimport { Component } from '@angular/core'\nimport {trigger, animate, style, group, animateChild, query, stagger, transition} from '@angular/animations'\n\nexport const routerTransition =\ntrigger('routerTransition', [\n      transition('* <=> *', [\n        // Initial state of new route\n        query(':enter',\n          style({\n            position: 'fixed',\n            width:'100%',\n            transform: 'translateX(100%)',\n            opacity: 1\n          }),\n          {optional:true}),\n        // move page off screen right on leave\n        query(':leave',\n          animate('300ms ease-out',\n            style({\n              position: 'fixed',\n              width:'100%',\n              transform: 'translateX(-100%)',\n              opacity: 1\n            })\n          ),\n        {optional:true}),\n\n        // move page in screen from left to right\n        query(':enter',\n          animate('300ms ease-in',\n            style({\n              opacity: 1,\n              transform: 'translateX(0%)'\n            })\n          ),\n        {optional:true}),\n        // --\n    ])\n])\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [ routerTransition ],\n})\nexport class AppComponent {\n  title = 'Titulo'\n  loading = false\n\n  private loaderSubscription: Subscription\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  voltar() {\n    window.history.back();\n  }\n\n  getState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n  ngOnDestroy() {\n    this.loaderSubscription.unsubscribe()\n  }\n\n}\n","// Core Modules\nimport { NgModule, ClassProvider } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// teste zoom image on IE\nimport { ImageViewerComponent } from './components/imageviewer/imageviewer.component';\nimport { ImageViewerModule } from '@hallysonh/ngx-imageviewer';\n\nimport { CustomToolBarComponent } from './components/custom-toolbar/custom.toolbar.component';\n\n// Material UI\nimport {\n  MatToolbarModule,\n  MatCardModule,\n  MatInputModule,\n  MatIconModule,\n  MatButtonModule,\n  MatListModule,\n  MatDividerModule,\n  MatChipsModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatAutocompleteModule,\n  MatSelectModule,\n  MatMenuModule,\n  MatStepperModule,\n  MatSidenavModule,\n  MatBadgeModule,\n  MatDialogModule,\n  MatTreeModule\n} from '@angular/material';\n\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n// Rotas\nimport { AppRoutingModule } from './app-routing.module';\n\n// Components\nimport { AppComponent} from './app.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {SearchUserComponent} from './components/user/search.user/search.user.component';\nimport { FormUserComponent } from './components/user/form.user/form.user.component';\n\nimport {SearchProcessComponent} from './components/process/search.process/search.process.component';\nimport { FormProcessComponent } from './components/process/form.process/form.process.component';\n\nimport {SearchLegalAdviceComponent} from './components/legal.advice/search.legal.advice/search.legal.advice.component';\nimport { FormLegalAdviceComponent } from './components/legal.advice/form.legal.advice/form.legal.advice.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SearchUserComponent,\n    FormUserComponent,\n    SearchProcessComponent,\n    FormProcessComponent,\n    SearchLegalAdviceComponent,\n    FormLegalAdviceComponent,\n    ImageViewerComponent,\n    CustomToolBarComponent\n  ],\n  imports: [\n    // ##CORE\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CdkTableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // ##MATERIAL\n    MatToolbarModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatListModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    // ##MATERIAL\n\n    // ##IMAGE VIEWER\n    ImageViewerModule,\n\n    AppRoutingModule // ROTAS\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n    height: 100%;\\n  }\\n  \\n  mat-sidenav {\\n    width: 250px;\\n  }\\n  \\n  a {\\n    text-decoration: none;\\n    color: white;\\n  }\\n  \\n  a:hover,\\n  a:active {\\n    color: lightgray;\\n  }\\n  \\n  .navigation-items {\\n    list-style: none;\\n    padding: 0;\\n    margin: 0;\\n    cursor: pointer;\\n  }\\n  \\n  .icon {\\n    display: inline-block;\\n    height: 30px;\\n    margin: 0 auto;\\n    padding-right: 5px;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 15%;\\n  }\\n  \\n  .label {\\n    display: inline-block;\\n    line-height: 30px;\\n    margin: 0;\\n    width: 85%;\\n  }\"","module.exports = \"<mat-sidenav-container>\\n  <mat-sidenav  #sidenav role=\\\"navigation\\\">\\n   <mat-nav-list>\\n    <a mat-list-item>\\n      <mat-icon class=\\\"icon\\\">dashboard</mat-icon>&nbsp;\\n      <span class=\\\"label\\\">Processo</span>\\n    </a>\\n    <a  mat-list-item type=\\\"button\\\" (click)=\\\"routeFormUser()\\\">\\n      <mat-icon class=\\\"icon\\\">person</mat-icon>&nbsp;\\n      <span class=\\\"label\\\">Usuário</span>\\n    </a>  \\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n     <div fxHide.gt-xs>\\n       <button mat-icon-button>\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n    </div>\\n     <div>\\n       <a>\\n          Sistema de Processo\\n       </a>\\n     </div>\\n     <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\n        <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n            <li>\\n              <a (click)=\\\"routeFormUser()\\\">\\n                  <mat-icon class=\\\"icon\\\">person</mat-icon>&nbsp;\\n                  <span class=\\\"label\\\">Usuário</span>\\n              </a>\\n            </li>\\n            <li>\\n                <a>\\n                    <mat-icon class=\\\"icon\\\">dashboard</mat-icon>&nbsp;\\n                    <span class=\\\"label\\\">Processo</span>\\n                </a>\\n              </li>\\n        </ul>\\n     </div>\\n    </mat-toolbar>\\n    <main>\\n    </main>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-custom-tool-bar',\n  templateUrl: './custom.toolbar.component.html',\n  styleUrls: ['./custom.toolbar.component.css']\n})\nexport class CustomToolBarComponent {\n\n  constructor(\n    private router: Router\n  ){}\n\n  routeFormUser() {\n    this.router.navigate([`/user`]);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"imagecontainer\\\">\\n    <div #imagewrapper class=\\\"imagewrapper\\\">\\n      <ngx-imageviewer src=\\\"{{ urlSrc }}\\\" [width]=\\\"canvasDim.width\\\" [height]=\\\"canvasDim.height\\\"></ngx-imageviewer>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n\\nh2 {\\n  margin-left: 20px;\\n  white-space: nowrap; }\\n\\n.imagewrapper {\\n  flex: 1;\\n  box-sizing: border-box;\\n  overflow: hidden;\\n  max-width: calc(100vw -  240px);\\n  min-width: calc(100vw - 240px);\\n  width: calc(100vw - 240px);\\n  max-height: calc(100vh - 152px);\\n  min-height: calc(100vh - 152px);\\n  height: calc(100vh - 152px); }\\n\\n@media only screen and (max-width: 600px) {\\n    .imagewrapper {\\n      max-width: calc(100vw - 40px);\\n      min-width: calc(100vw - 40px);\\n      width: calc(100vw - 40px); } }\\n\"","import { Component, AfterViewInit, ViewChild, ElementRef, HostListener, OnInit, Input } from '@angular/core';\nimport { IMAGEVIEWER_CONFIG, ImageViewerConfig } from '@hallysonh/ngx-imageviewer';\n\nconst IMAGEVIEWER_CUSTOM_CONFIG: ImageViewerConfig = {\n  width: 200, // component default width\n  height: 200, // component default height\n  bgStyle: '#ffffff', // component background style\n  buttonStyle: {\n  bgStyle: '#80CBC4', //  buttons' background style\n  iconStyle: '#ffffff', // buttons' icon colors\n  borderStyle: '#ffffff', // buttons' border style\n  borderWidth: 2 // buttons' border width (0 == disabled)\n}\n}\n\n@Component({\n  selector: 'app-imageviewer',\n  templateUrl: './imageviewer.component.html',\n  styleUrls: ['./imageviewer.component.scss'],\n  providers: [\n    {\n      provide: IMAGEVIEWER_CONFIG,\n      useValue: IMAGEVIEWER_CUSTOM_CONFIG\n    }\n  ]\n})\nexport class ImageViewerComponent implements AfterViewInit {\n  @ViewChild('imagewrapper') wrapper: ElementRef;\n\n  private _canvasDim = { width: 10, height: 10 };\n\n  @Input()\n  urlSrc: string\n\n  get canvasDim() {\n    return this._canvasDim;\n  }\n\n  ngAfterViewInit() {\n    this.updateCanvasDim();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.updateCanvasDim();\n  }\n\n  private updateCanvasDim() {\n    const el = this.wrapper && this.wrapper.nativeElement ? this.wrapper.nativeElement : null;\n    if (el && (el.offsetWidth !== this._canvasDim.width || el.offsetHeight !== this._canvasDim.height)) {\n      const newDim = { width: el.offsetWidth - 2, height: el.offsetHeight - 2 };\n      setTimeout(() => this._canvasDim = newDim, 0);\n    }\n  }\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-content >\\n        <mat-card-title >\\n          <button mat-icon-button color=\\\"accent\\\" (click)=\\\"voltar()\\\"><mat-icon>keyboard_backspace</mat-icon> </button>\\n          &nbsp;Parecer Jurídico\\n        </mat-card-title>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"legalAdvice.id && !legalAdvice.idFinishedBy\\\">\\n          <button mat-button color=\\\"accent\\\"  (click)=\\\"redirectProcess()\\\" > \\n              <mat-icon>library_books</mat-icon> {{legalAdvice.processCode}}\\n          </button>\\n      </div>\\n        \\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <textarea matInput placeholder=\\\"Descrição\\\" id=\\\"description\\\" [(ngModel)]=\\\"legalAdvice.description\\\" required></textarea>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n        <mat-select style=\\\"margin-top: 30px\\\" placeholder=\\\"Usuário Responsável\\\" [(ngModel)]=\\\"legalAdvice.idResponsableFor\\\">\\n          <mat-option *ngFor=\\\"let u of users\\\" [value]=\\\"u.id\\\">\\n            {{u.name}}\\n        </mat-option>\\n        </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"legalAdvice.idFinishedBy\\\"> \\n          <div style=\\\"color: red\\\"> \\n              <mat-icon>info</mat-icon>Parecer Finalizado!\\n          </div>\\n    </div>\\n      \\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"legalAdvice.id && !legalAdvice.idFinishedBy\\\">\\n          <button mat-button color=\\\"warn\\\"> \\n                  <mat-icon>info</mat-icon> Finalizar Parecer\\n              </button>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"legalAdvice.id && !legalAdvice.idFinishedBy\\\">\\n          <button mat-button color=\\\"accent\\\"  (click)=\\\"save()\\\" > \\n              <mat-icon>save</mat-icon> Salvar\\n          </button>\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { LegalAdviceService } from '../../../services/legal.advice/legal.advice.service';\nimport { LegalAdvice } from '../../../services/legal.advice/legal.advice.model';\n\nimport { UserService } from '../../../services/user/user.service';\nimport { User } from '../../../services/user/user.model';\n\n@Component({\n  selector: 'app-form-legal-advice',\n  templateUrl: './form.legal.advice.component.html',\n  styleUrls: ['./form.legal.advice.component.scss']\n})\nexport class FormLegalAdviceComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private legalAdviceService: LegalAdviceService,\n    private userService: UserService\n  ) { }\n\n  legalAdviceId: number;\n  legalAdvice: LegalAdvice = new LegalAdvice();\n\n  users: User[];\n\n  ngOnInit() {\n\n    this.route.paramMap.subscribe(params => {\n      if(params.get('id')){\n        this.legalAdviceId = Number(params.get('id'))\n        this.legalAdviceService.getLegalAdviceById(this.legalAdviceId).subscribe(\n          p =>{\n            console.log('getProcessById==>', p)\n            this.legalAdvice = p;\n          }\n        )\n      }else{\n        this.legalAdvice = new LegalAdvice();\n      }\n    });\n\n    this.userService.getAllUsers()\n      .subscribe(res => {\n        console.log('>>>> get users res=', res);\n        this.users = res; \n    },\n    error => {\n      console.log('error service get users ==>', error);\n    });\n  }\n\n  save(){\n    if(this.legalAdvice.id){\n      this.upDateProcess();\n    }else{\n      this.createProcess();\n    }\n  }\n\n  redirectProcess(){\n    this.router.navigate([`/process/form/${this.legalAdvice.processId}`])\n  }\n\n  createProcess(){\n    this.legalAdvice.idCreatedBy = 9999991;\n    this.legalAdviceService.createLegalAdvice(this.legalAdvice).subscribe(\n      u =>{\n        this.router.navigate(['/legalAdvice'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  upDateProcess(){\n    this.legalAdviceService.updateLegalAdvice(this.legalAdviceId, this.legalAdvice).subscribe(\n      p =>{\n        this.router.navigate(['/legalAdvice'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  voltar() {\n    window.history.back();\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n\\n    <mat-card-content>\\n      <div *ngIf=\\\"isError\\\">\\n        <mat-chip-list >\\n          <mat-chip style=\\\"margin-left: 30%\\\" color=\\\"warn\\\" selected=\\\"true\\\"><mat-chip-avatar> <mat-icon>error</mat-icon></mat-chip-avatar> {{ error }}</mat-chip>\\n        </mat-chip-list>\\n      </div>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n      <mat-list-item *ngFor=\\\"let l of legalAdvices\\\">\\n\\n\\n\\n        <!-- <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n        <h4 mat-line  ><mat-icon>dashboard</mat-icon> {{l.description}} </h4>\\n        <mat-divider inset *ngIf=\\\"!last\\\"></mat-divider> -->\\n\\n      <span (click)=\\\"routeFormLegalAdvice(l.id)\\\">\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n        <h4 mat-line > <mat-icon matListIcon>person_outline</mat-icon>{{l.nameResponsableFor}}</h4>\\n        <p matLine>\\n            <span> <mat-icon >library_books</mat-icon> {{l.processCode}}</span>\\n          </p>\\n        <p matLine>\\n            <span><mat-icon >playlist_add_check</mat-icon> {{l.description | slice:0:55}} ...</span>\\n        </p>\\n        <mat-divider inset *ngIf=\\\"!last\\\"></mat-divider>\\n      </span>\\n\\n\\n\\n\\n      </mat-list-item>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","module.exports = \".demo-list {\\n  display: flex;\\n  flex-flow: row wrap; }\\n  .demo-list .mat-list, .demo-list .mat-nav-list, .demo-list .mat-selection-list {\\n    border: 1px solid rgba(0, 0, 0, 0.12);\\n    width: 350px;\\n    margin: 20px 20px 0 0; }\\n  .demo-list h2 {\\n    margin-top: 20px; }\\n  .demo-list .mat-icon {\\n    color: rgba(0, 0, 0, 0.12); }\\n  .demo-list .mat-list-icon {\\n    color: white;\\n    background: rgba(0, 0, 0, 0.3); }\\n  .demo-secondary-text {\\n  color: rgba(0, 0, 0, 0.54); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { LegalAdviceService } from '../../../services/legal.advice/legal.advice.service';\nimport { LegalAdvice } from '../../../services/legal.advice/legal.advice.model'\n\n@Component({\n  selector: 'app-search-legal-advice-component',\n  templateUrl: './search.legal.advice.component.html',\n  styleUrls: ['./search.legal.advice.component.scss']\n})\nexport class SearchLegalAdviceComponent implements OnInit {\n\n  legalAdvices: LegalAdvice[];\n\n  // exibicao de mensagem de erro na tela\n  isError: Boolean = false;\n  error: string;\n\n  // exibicao de loader na tela\n  exibeProgress: Boolean = false;\n  value: Number = 0;\n\n  constructor(\n    private legalAdviceService: LegalAdviceService,\n    private router: Router\n  ) { }\n\n  routeFormLegalAdvice(id) {\n    this.router.navigate([`/legalAdvice/form/${id}`]);\n  }\n\n  routeFormNewLegalAdvice() {\n    this.router.navigate([`/legalAdvice/form`]);\n  }\n\n  back() {\n    window.history.back();\n  }\n\n  ngOnInit() {\n    this.legalAdviceService.getAllLegalAdvices()\n      .subscribe(res => {\n        console.log('>>>> get legal advices res=', res);\n        this.legalAdvices = res;\n        this.exibeProgress = false;\n    },\n    error => {\n      console.log('error service get legal advices ==>', error);\n      this.exibeProgress = false;\n      this.isError = true;\n      this.error = `Não há legal advices para ser exibido`;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"  <div>\\n  <mat-card>\\n    <mat-card-title><mat-card-title><mat-icon>lock</mat-icon> Login  </mat-card-title></mat-card-title>\\n\\n    <mat-card-content>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"User\\\" id=\\\"user\\\" [(ngModel)]=\\\"user\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"password\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"loginError\\\">\\n        <mat-chip-list>\\n          <mat-chip selected=\\\"true\\\" color=\\\"warn\\\">\\n            <mat-icon>warning</mat-icon>\\n            {{ loginError }}\\n          </mat-chip>\\n        </mat-chip-list>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\n        <span class=\\\"send\\\">\\n          <button mat-fab type=\\\"submit\\\" id=\\\"login\\\" >\\n            <mat-icon>send</mat-icon>\\n          </button>\\n        </span>\\n      </div>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  user: String;\n  password: String;\n  loginError: String;\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  login() {\n    console.log('efetuando login');\n    this.router.navigate(['/user']);\n  }\n\n  reduceParaAgrupar() {\n    const guias = [\n            { peg_id: '1', guia_id: 'guia1', instance: '2342342' },\n            { peg_id: '2', guia_id: 'guia22', instance: '254524423' },\n            { peg_id: '1', guia_id: 'guia11', instance: '6967853' },\n            { peg_id: '2', guia_id: 'guia2', instance: '4678643' },\n            { peg_id: '1', guia_id: 'guia111', instance: '9824612' }\n          ];\n\n    const novoArray = guias\n                  .reduce((acumulador, atual) => {\n                      acumulador[atual.peg_id] = acumulador[atual.peg_id] || [];\n                      acumulador[atual.peg_id].push(atual);\n                      return acumulador;\n                    },\n                    Object.create(null)\n                  );\n\n    console.log(novoArray);\n  }\n\n  reduceParaProcurar() {\n    const tasks = [\n      { name: 'nome', id: '1', processInstance: {id: '6574534'}, taskDefinitionKey: '2342342' },\n      { name: 'nome', id: '1', processInstance: {id: '6574534'}, taskDefinitionKey: '2342342' },\n      { name: 'nome', id: '1', processInstance: {id: '6574534'}, taskDefinitionKey: '2342342' },\n      { name: 'nome', id: '1', processInstance: {id: '6574534'}, taskDefinitionKey: '2342342' }\n    ];\n\n    const novoArray = tasks\n          .filter(d => d.processInstance.id)\n          .reduce( (reduce, task) => {\n                    const current = reduce.find(rd => rd.taskDefinitionKey === task.taskDefinitionKey);\n\n                    if (current) {\n                      current.processInstances.push({ taskId: task.id, ...task.processInstance });\n                    } else {\n                      reduce.push({\n                        name: task.name,\n                        taskDefinitionKey: task.taskDefinitionKey,\n                        processInstances: [{ taskId: task.id, ...task.processInstance }]\n                      });\n                    }\n\n                    return reduce;\n              }\n              , []\n            );\n    console.log(novoArray);\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-content >\\n        <mat-card-title >\\n          <button mat-icon-button color=\\\"accent\\\" (click)=\\\"voltar()\\\"><mat-icon>keyboard_backspace</mat-icon> </button>\\n          &nbsp;Processo\\n        </mat-card-title>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n        <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Número\\\" id=\\\"code\\\" [(ngModel)]=\\\"process.code\\\" required>\\n            </mat-form-field>\\n        </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Resumo\\\" id=\\\"summary\\\" [(ngModel)]=\\\"process.summary\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n            <textarea matInput placeholder=\\\"Descrição\\\" id=\\\"description\\\" [(ngModel)]=\\\"process.description\\\" required></textarea>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n          <mat-card-content>\\n            <div *ngIf=\\\"listLegalAdvice.length > 0\\\">Parecer:</div>\\n              <mat-list-item *ngFor=\\\"let l of listLegalAdvice\\\">\\n                <!--\\n                <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n                <h4 mat-line ></h4><mat-icon class=\\\"material-icons\\\">person_outline</mat-icon> {{l.loginResponsableFor}}  </h4>\\n                <mat-divider inset *ngIf=\\\"!last\\\"></mat-divider>\\n                -->\\n                <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n                <h4 mat-line> <mat-icon matListIcon>person_outline</mat-icon>{{l.nameResponsableFor}}</h4>\\n                <p matLine>\\n                  <span> {{l.description | slice:0:55}} ... <mat-icon (click)=\\\"redirectLegalAdvice(l.id)\\\">playlist_add_check</mat-icon></span>\\n                </p>\\n                <mat-divider inset *ngIf=\\\"!last\\\"></mat-divider>\\n              </mat-list-item>\\n          </mat-card-content>\\n          <mat-card-content *ngIf=\\\"!process.id\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n                <mat-select style=\\\"margin-top: 30px\\\" placeholder=\\\"Usuário Responsável pelo Parecer\\\" [(ngModel)]=\\\"legalAdvice.idResponsableFor\\\">\\n                  <mat-option *ngFor=\\\"let u of users\\\" [value]=\\\"u.id\\\">\\n                    {{u.name}}\\n                </mat-option>\\n                </mat-select>\\n                <button style=\\\"margin-top: 30px\\\" mat-button color=\\\"accent\\\" fxLayoutAlign=\\\"end\\\"  (click)=\\\"addLegalAdvice()\\\"> \\n                    <mat-icon>person_add</mat-icon>\\n                      Incluir \\n                </button>\\n              </div>\\n          </mat-card-content>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"process.idUserFinishedBy\\\"> \\n          <div style=\\\"color: red\\\"> \\n              <mat-icon>info</mat-icon>Processo Finalizado!\\n          </div>\\n    </div>\\n      \\n      <div style=\\\"margin-top: 30px\\\" fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"process.id && !process.idUserFinishedBy\\\">\\n              <button mat-button color=\\\"warn\\\"> \\n                  <mat-icon>info</mat-icon> Finalizar Processo\\n              </button>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\" *ngIf=\\\"!process.idUserFinishedBy\\\">\\n          <button mat-button color=\\\"accent\\\" (click)=\\\"save()\\\"> \\n              <mat-icon>save</mat-icon> Salvar\\n          </button>\\n      </div>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ProcessService } from '../../../services/process/process.service';\nimport { Process } from '../../../services/process/process.model';\nimport { LegalAdvice } from '../../../services/legal.advice/legal.advice.model';\n\nimport { UserService } from '../../../services/user/user.service';\nimport { User } from '../../../services/user/user.model';\n\n@Component({\n  selector: 'app-form-process',\n  templateUrl: './form.process.component.html',\n  styleUrls: ['./form.process.component.scss']\n})\nexport class FormProcessComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private processService: ProcessService,\n    private userService: UserService\n  ) { }\n\n  processId: number;\n  process: Process = new Process();\n  legalAdvice: LegalAdvice = new LegalAdvice();\n  listLegalAdvice: LegalAdvice[] = new Array<LegalAdvice>();\n\n  users: User[];\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      if(params.get('id')){\n        this.processId = Number(params.get('id'))\n        this.processService.getProcessById(this.processId).subscribe(\n          p =>{\n            console.log('getProcessById==>', p)\n            this.process = p;\n            this.listLegalAdvice = p.legalAdvices;\n          }\n        )\n      }else{\n        this.process = new Process();\n      }\n    });\n\n    this.userService.getAllUsers()\n      .subscribe(res => {\n        console.log('>>>> get users res=', res);\n        this.users = res; \n    },\n    error => {\n      console.log('error service get users ==>', error);\n    });\n  }\n\n  addLegalAdvice(){\n    let tempUser:User = this.users.find(l=> l.id == this.legalAdvice.idResponsableFor);\n    console.log('tempUser',tempUser);\n    this.legalAdvice.loginResponsableFor = tempUser.login;\n    this.legalAdvice.nameResponsableFor = tempUser.name;\n    let newListLegalAdvice: LegalAdvice[] = this.listLegalAdvice.slice(0);\n    this.legalAdvice.idCreatedBy = 9999991;\n    newListLegalAdvice.push(this.legalAdvice);\n    this.listLegalAdvice = newListLegalAdvice;\n    this.legalAdvice = new LegalAdvice();\n  }\n\n  save(){\n    if(this.process.id){\n      this.upDateProcess();\n    }else{\n      this.createProcess();\n    }\n  }\n\n  redirectLegalAdvice(id){\n    this.router.navigate([`/legalAdvice/form/${id}`])\n  }\n\n  createProcess(){\n    this.process.idUserCreatedBy = 9999991;\n    this.process.legalAdvices = this.listLegalAdvice;\n    this.processService.createProcess(this.process).subscribe(\n      u =>{\n        this.router.navigate(['/process'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  upDateProcess(){\n    this.processService.updateProcess(this.processId, this.process).subscribe(\n      p =>{\n        this.router.navigate(['/process'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  voltar() {\n    window.history.back();\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-title>\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"routeFormNewProcess()\\\">\\n            <mat-icon>dashboard</mat-icon>\\n            Adicionar Novo\\n        </button>\\n    </mat-card-title>\\n\\n    <mat-card-content>\\n      <div *ngIf=\\\"isError\\\">\\n        <mat-chip-list >\\n          <mat-chip style=\\\"margin-left: 30%\\\" color=\\\"warn\\\" selected=\\\"true\\\"><mat-chip-avatar> <mat-icon>error</mat-icon></mat-chip-avatar> {{ error }}</mat-chip>\\n        </mat-chip-list>\\n      </div>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n      <mat-list-item *ngFor=\\\"let p of processes\\\">\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n        <h4 mat-line (click)=\\\"routeFormProcess(p.id)\\\" ><mat-icon>library_books</mat-icon> {{p.code}}  |  {{p.summary}} </h4>\\n        <mat-divider inset *ngIf=\\\"!last\\\"></mat-divider>\\n      </mat-list-item>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","module.exports = \".demo-list {\\n  display: flex;\\n  flex-flow: row wrap; }\\n  .demo-list .mat-list, .demo-list .mat-nav-list, .demo-list .mat-selection-list {\\n    border: 1px solid rgba(0, 0, 0, 0.12);\\n    width: 350px;\\n    margin: 20px 20px 0 0; }\\n  .demo-list h2 {\\n    margin-top: 20px; }\\n  .demo-list .mat-icon {\\n    color: rgba(0, 0, 0, 0.12); }\\n  .demo-list .mat-list-icon {\\n    color: white;\\n    background: rgba(0, 0, 0, 0.3); }\\n  .demo-secondary-text {\\n  color: rgba(0, 0, 0, 0.54); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { ProcessService } from '../../../services/process/process.service';\nimport { Process } from '../../../services/process/process.model'\n\n@Component({\n  selector: 'app-search-process-component',\n  templateUrl: './search.process.component.html',\n  styleUrls: ['./search.process.component.scss']\n})\nexport class SearchProcessComponent implements OnInit {\n\n  processes: Process[];\n\n  // exibicao de mensagem de erro na tela\n  isError: Boolean = false;\n  error: string;\n\n  // exibicao de loader na tela\n  exibeProgress: Boolean = false;\n  value: Number = 0;\n\n  constructor(\n    private processService: ProcessService,\n    private router: Router\n  ) { }\n\n  routeFormProcess(id) {\n    this.router.navigate([`/process/form/${id}`]);\n  }\n\n  routeFormNewProcess() {\n    this.router.navigate([`/process/form`]);\n  }\n\n  back() {\n    window.history.back();\n  }\n\n  ngOnInit() {\n    this.processService.getAllProcesses()\n      .subscribe(res => {\n        console.log('>>>> get processes res=', res);\n        this.processes = res;\n        this.exibeProgress = false;\n        // this.router.navigate(['/users'])\n    },\n    error => {\n      console.log('error service get processes ==>', error);\n      this.exibeProgress = false;\n      this.isError = true;\n      this.error = `Não há processos para ser exibido`;\n    });\n\n  }\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-content >\\n        <mat-card-title >\\n          <button mat-icon-button color=\\\"accent\\\" (click)=\\\"voltar()\\\"><mat-icon>keyboard_backspace</mat-icon> </button>\\n          &nbsp;Usuário\\n        </mat-card-title>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nome\\\" id=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Login\\\" id=\\\"login\\\" [(ngModel)]=\\\"user.login\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" required>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n          <mat-form-field>\\n              <mat-select placeholder=\\\"Perfil\\\" [(ngModel)]=\\\"user.profile\\\">\\n                  <mat-option value=\\\"ADMINISTRADOR\\\" >ADMINISTRADOR</mat-option>\\n                  <mat-option value=\\\"TRIADOR\\\">TRIADOR</mat-option>\\n                  <mat-option value=\\\"FINALIZADOR\\\">FINALIZADOR</mat-option>\\n              </mat-select>\\n          </mat-form-field>\\n      </div>\\n\\n\\n      <div fxLayout=\\\"row\\\" fxLayout=\\\"column\\\">\\n          <mat-form-field>\\n              <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"user.status\\\">\\n                  <mat-option value=\\\"ATIVO\\\" >ATIVO</mat-option>\\n                  <mat-option value=\\\"INATIVO\\\">INATIVO</mat-option>\\n              </mat-select>\\n          </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\n        <span class=\\\"send\\\">\\n          <button mat-fab (click)=\\\"save()\\\"> \\n            <mat-icon>send</mat-icon>\\n          </button>\\n        </span>\\n      </div>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { UserService } from '../../../services/user/user.service';\nimport { User } from '../../../services/user/user.model'\n\n@Component({\n  selector: 'app-form-user',\n  templateUrl: './form.user.component.html',\n  styleUrls: ['./form.user.component.scss']\n})\nexport class FormUserComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) { }\n\n  userId: number;\n  user: User = new User();\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      if(params.get('id')){\n        this.userId = Number(params.get('id'))\n        this.userService.getUserById(this.userId).subscribe(\n          u =>{\n              this.user = u;\n          }\n        )\n      }else{\n        this.user = new User();\n      }\n    });\n  }\n\n  save(){\n    if(this.user.id){\n      this.upDateUser();\n    }else{\n      this.createUser();\n    }\n  }\n\n  createUser(){\n    this.userService.createUser(this.user).subscribe(\n      u =>{\n        this.router.navigate(['/user'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  upDateUser(){\n    this.userService.updateUser(this.userId, this.user).subscribe(\n      u =>{\n        this.router.navigate(['/user'])\n      },\n      err =>{\n        console.error(err);\n      });\n  }\n\n  voltar() {\n    window.history.back();\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-card>\\n    <mat-card-title>\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"routeFormNewUser()\\\">\\n            <mat-icon>person_add</mat-icon>\\n            Adicionar Novo\\n        </button>\\n    </mat-card-title>\\n\\n    <mat-card-content>\\n      <div *ngIf=\\\"isError\\\">\\n        <mat-chip-list >\\n          <mat-chip style=\\\"margin-left: 30%\\\" color=\\\"warn\\\" selected=\\\"true\\\"><mat-chip-avatar> <mat-icon>error</mat-icon></mat-chip-avatar> {{ error }}</mat-chip>\\n        </mat-chip-list>\\n      </div>\\n    </mat-card-content>\\n\\n    <mat-card-content>\\n      <mat-list-item *ngFor=\\\"let u of users\\\">\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n        <h4 mat-line (click)=\\\"routeFormUser(u.id)\\\" ><mat-icon>account_circle</mat-icon> {{u.login}} | {{u.name}} | {{u.profile}}</h4>\\n        <mat-divider inset *ngIf=\\\"!last\\\"></mat-divider>\\n      </mat-list-item>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","module.exports = \".demo-list {\\n  display: flex;\\n  flex-flow: row wrap; }\\n  .demo-list .mat-list, .demo-list .mat-nav-list, .demo-list .mat-selection-list {\\n    border: 1px solid rgba(0, 0, 0, 0.12);\\n    width: 350px;\\n    margin: 20px 20px 0 0; }\\n  .demo-list h2 {\\n    margin-top: 20px; }\\n  .demo-list .mat-icon {\\n    color: rgba(0, 0, 0, 0.12); }\\n  .demo-list .mat-list-icon {\\n    color: white;\\n    background: rgba(0, 0, 0, 0.3); }\\n  .demo-secondary-text {\\n  color: rgba(0, 0, 0, 0.54); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { UserService } from '../../../services/user/user.service';\nimport { User } from '../../../services/user/user.model'\n\n@Component({\n  selector: 'app-search-user-component',\n  templateUrl: './search.user.component.html',\n  styleUrls: ['./search.user.component.scss']\n})\nexport class SearchUserComponent implements OnInit {\n\n  users: User[];\n\n  // exibicao de mensagem de erro na tela\n  isError: Boolean = false;\n  error: string;\n\n  // exibicao de loader na tela\n  exibeProgress: Boolean = false;\n  value: Number = 0;\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  routeFormUser(id) {\n    this.router.navigate([`/user/form/${id}`]);\n  }\n\n  routeFormNewUser() {\n    this.router.navigate([`/user/form`]);\n  }\n\n  back() {\n    window.history.back();\n  }\n\n  ngOnInit() {\n    this.userService.getAllUsers()\n      .subscribe(res => {\n        console.log('>>>> get users res=', res);\n        this.users = res;\n        this.exibeProgress = false;\n        // this.router.navigate(['/users'])\n    },\n    error => {\n      console.log('error service get users ==>', error);\n      this.exibeProgress = false;\n      this.isError = true;\n      this.error = `Have no users`;\n    });\n\n  }\n}\n","export class LegalAdvice {\n    id: string\n    description: string\n    processId: number\n    processCode: string\n    idCreatedBy: number\n    idFinishedBy:number\n    idResponsableFor: number\n    loginCreatedBy: string\n    loginFinishedBy: string\n    loginResponsableFor: string\n    nameResponsableFor: string\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LegalAdvice } from './legal.advice.model';\nimport envConf from '../../shared/env-config'\n\nconst URL = `${envConf.api.url}/api/v1/legal-advice`\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegalAdviceService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllLegalAdvices(){\n    console.log('getAllLegalAdvices URL=>', URL);\n    return this.http.get<LegalAdvice[]>(`${URL}`);\n  }\n\n  getLegalAdviceById(id){\n    console.log('getLegalAdviceById URL=>', URL);\n    return this.http.get<LegalAdvice>(`${URL}/${id}`);\n  }\n\n  createLegalAdvice(legalAdvice) {\n    console.log('legalAdvice=>', legalAdvice);\n    console.log('createLegalAdvice URL=>', URL);\n    return this.http.post(`${URL}`, legalAdvice);\n  }\n\n  updateLegalAdvice(id, legalAdvice) {\n    console.log('legalAdvice=>', legalAdvice);\n    console.log('updateLegalAdvice URL=>', `${URL}/${id}`);\n    return this.http.post(`${URL}/${id}`, legalAdvice);\n  }\n  \n}\n","import {LegalAdvice} from '../legal.advice/legal.advice.model'\nexport class Process {\n    id: string\n    code: string\n    summary: string\n    description: string\n    idUserCreatedBy: number\n    idUserFinishedBy:number\n    loginCreatedBy: string\n    loginFinishedBy: string\n    legalAdvices: LegalAdvice[]\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Process } from './process.model';\nimport envConf from '../../shared/env-config'\n\nconst URL = `${envConf.api.url}/api/v1/processes`\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllProcesses(){\n    console.log('getAllProcesses URL=>', URL);\n    return this.http.get<Process[]>(`${URL}`);\n  }\n\n  getProcessById(id){\n    console.log('getProcessById URL=>', URL);\n    return this.http.get<Process>(`${URL}/${id}`);\n  }\n\n  createProcess(process) {\n    console.log('user=>', process);\n    console.log('createProcess URL=>', URL);\n    return this.http.post(`${URL}`, process);\n  }\n\n  updateProcess(id, process) {\n    console.log('user=>', process);\n    console.log('updateUser URL=>', `${URL}/${id}`);\n    return this.http.post(`${URL}/${id}`, process);\n  }\n  \n}\n","export class User {\n    id: number\n    name: string\n    login: string\n    password: string\n    profile: string\n    status: string\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user.model';\nimport envConf from '../../shared/env-config'\n\nconst URL = `${envConf.api.url}/api/v1/users`\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllUsers(){\n    console.log('getAllUsers URL=>', URL);\n    return this.http.get<User[]>(`${URL}`);\n  }\n\n  getUserById(id){\n    console.log('getAllUsers URL=>', URL);\n    return this.http.get<User>(`${URL}/${id}`);\n  }\n\n  createUser(user) {\n    console.log('user=>', user);\n    console.log('createUser URL=>', URL);\n    return this.http.post(`${URL}`, user);\n  }\n\n  updateUser(id, user) {\n    console.log('user=>', user);\n    console.log('updateUser URL=>', `${URL}/${id}`);\n    return this.http.post(`${URL}/${id}`, user);\n  }\n\n  getUsersMock(){\n    let usersMocked = [\n      { id: '1', login: 'Luana', perfil: {id:'1', nome: 'perfil A'}},\n      { id: '1', login: 'Luana', perfil: {id:'1', nome: 'perfil A'}},\n      { id: '1', login: 'Luana', perfil: {id:'1', nome: 'perfil A'}}\n    ]\n    return Observable.create(observer => {\n           observer.next(usersMocked)\n           observer.complete()\n    })\n  }\n}\n","\nimport { environment } from '../../environments/environment';\n\nexport default {\n    api: {\n        url: environment.apiUrl\n    }\n};\n","\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:3000\"\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs'; \n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}